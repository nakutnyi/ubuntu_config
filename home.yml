---

- hosts: localhost

  vars:
    homedir: /home/roman/
    user: roman
    group: roman
    favourite_editor: vim.basic
    git_config_global:
      user.name: Roman Nakutnyi
      user.email: rnakutnyi@devforth.io
      rerere.enabled: true
      alias.st: status
      alias.pr: 'pull --rebase'
      alias.co: checkout
      alias.cm: commit
      alias.gr: grep
      alias.br: branch
      alias.nicebr: for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
      diff.tool: meld
      pull.rebase: true
    git_repolist_personal:
      - "dev/ansible/ubuntu_config": "git@github.com:nakutnyi/ubuntu_config.git"
      - "dev/python/pomodoro-timer": "git@github.com:nakutnyi/pomodoro-timer.git"
      - ".emacs.d/": "git@github.com:nakutnyi/emacs_config.git"

    dconf_config:
      # Make workspaces same as in Ubuntu 18.04
      "/org/compiz/profiles/unity/plugins/core/hsize": "1"
      "/org/compiz/profiles/unity/plugins/core/vsize": "4"
      # Prepare a placeholder for gsettings mapping (Alt+BS->Caps Lock)
      "/org/gnome/settings-daemon/plugins/media-keys": "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/']"
      # The space in front of the following value is necessary,
      # it prevents ansible from translating the value into python objects:
      "/org/gnome/desktop/input-sources/sources": " [('xkb', 'us+colemak'), ('xkb', 'ua')]"
      # Minor tweaks
      "/com/canonical/indicator/power/show-percentage": "true"
      "/org/gnome/desktop/interface/clock-show-seconds": "true"
      # Below entries do not work, I leave them below for a reference for manual fix in Ubuntu 16.04:
      #"/org/compiz/profiles/unity/plugins/grid/put-maximize-key": "<Control><Super>Up"
      #"/org/compiz/profiles/unity/plugins/grid/right-maximize": "<Control><Super>Right"
      #"/org/compiz/profiles/unity/plugins/grid/put-restore-key": "<Control><Super>Down"
      #"/org/compiz/profiles/unity/plugins/grid/left-maximize": "<Control><Super>Left"

    gsettings_schemapath: "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/"

  tasks:

    - name: Add repositories
      tags: [ apps, repos ]
      become: yes
      apt_repository:
        repo: "{{ item }}"
        state: present
      with_items:
        - 'ppa:git-core/ppa'
        - 'ppa:kelleyk/emacs'
        - 'ppa:bit-team/stable'
        - 'ppa:deadsnakes/ppa'
    
    - name: install apt applications
      tags: [ apps, apt ]
      become: yes
      apt:
        name:
          # tools
          - fish  # additional shell
          - zsh  # yet another shell
          - xdotool
          - dconf-editor
          - gnome-panel
          # emacs and its plugins
          - emacs
          - yaml-mode
          # python plugins
          - python3-tk
          - pylint
          - pylint3
          - python3-pip
          - python3-dev
          - virtualenv
          # miscellaneous
          - chromium-browser
          - firefox
          - shutter
          - vim
          - goldendict
          - sqlite3
          - anki
          - vlc
          - simplescreenrecorder
          - inkscape
          # for development
          - git
          - gitk
          - meld
          - libecpg-dev  # postgres-C library for pgsanity
          # for external drive encryption
          - gnome-disk-utility
          - cryptsetup
          # for backups
          - backintime-qt4
          # job stuff
          - lxd-client
        state: latest

    - name: Update and upgrade apt packages
      # Because the "latest" option in previous task doesn't always work
      tags: [ apps, update ]
      become: yes
      apt: >
        upgrade=yes
        update_cache=yes
        cache_valid_time=3600
    
    - name: Install snap applications
      tags: [ apps, snap ]
      become: yes
      snap:
        name:
          - telegram-desktop
          - tmux
          - tree
          - postman

    - name: Install python plugins for ansible
      tags: [ apps, python ]
      become: yes
      pip:
        executable: '/usr/bin/pip3'  # TODO unhardcode
        name: "{{ item }}"
        state: present
      with_items:
        # psutil is necessary for current ansible playbook
        - psutil
        # job stuff
        - pytest

    - name: Create directories
      tags: dirs
      become: yes
      file:
        path: "{{ homedir }}/{{ item }}" 
        state: directory
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: 0755
      with_items:
        - "Soft/goldendict"
        - "dev/python"
        - "dev/study"
        - "backup"
        - "config"
        - "work"

    - name: Ensure that autostart directory exists
      file:
        path: "/home/roman/.config/autostart/"
        state: directory
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: 0755

    - name: Set Startup applications
      file:
        state: link
        force: yes
        src: "/usr/share/applications/{{ item }}.desktop"
        dest: "{{ homedir }}.config/autostart/{{ item }}.desktop"
      with_items:
        - goldendict
        - google-chrome
        - transmission-gtk
        - chromium-browser
        - firefox
        - pycharm-community
        - gnome-terminal

    - name: Dconf configuration
      tags: dconf
      dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
      with_dict: "{{ dconf_config }}"

    - name: Remap Ctrl+BackSpace to Caps Lock since Caps Lock is remapped to BS
      tags: dconf # not actually dconf, but related
      command: "gsettings set {{ gsettings_schemapath }} {{ item.key }} {{ item.value }}"
      with_dict:
        "name": "Ctrl_Backspace_to_Caps_Lock"
        "binding": "'<Ctrl>BackSpace'"

    - name: Remap Alt+BackSpace to Caps Lock (separate task for args with spaces)
      tags: dconf # not actually dconf, but related
      command: 
        argv:
          - gsettings
          - set
          - "{{ gsettings_schemapath }}"
          - command
          - xdotool key Caps_Lock

    - name: Allow core dumps for the user (for C debugging)
      become: yes
      pam_limits:
        domain: "{{ user }}"
        limit_type: soft
        limit_item: core
        value: 8192

    - name: Tweak for Visual Studio Code
      become: yes
      sysctl:
        name: fs.inotify.max_user_watches
        value: 524288

    - name: Block distracting sites.
      become: yes
      blockinfile: |
        dest=/etc/hosts
        content="#Block junk sites
        #127.0.0.1 www.facebook.com
        127.0.0.1 bash.im"

    - name: Get vim location
      shell: "which {{ favourite_editor }}"
      register: command_output

    - name: Set editor_path variable (used in the next step)
      set_fact:
        editor_path: "{{ command_output.stdout_lines[0] }}"

    - name: Setup fish config file
      lineinfile:
        create: yes
    - name: Setup fish config file
      lineinfile:
        create: yes
        dest: "{{ homedir }}/.config/fish/config.fish"
        line: "{{ item }}"
      with_items:
        - "setenv EDITOR {{ editor_path }}"
        - "setenv DOCKER_HIDE_LEGACY_COMMANDS true"

    - name: Initialize Git repos
      tags: git
      git:
        update: no
        repo: "{{ item.value }}"
        dest: "{{ homedir }}/{{ item.key }}"
      with_dict: "{{ git_repolist_personal }}"

    - name: Global git config
      tags: git
      become: yes
      git_config:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ git_config_global }}"

    - name: A kludge to prevent user git config from taking action
      tags: git
      file:
        path: "{{ homedir }}/.gitconfig"
        state: absent

    - name: Personal git config
      tags: git
      git_config:
        scope: local
        repo: "{{ homedir }}{{ item.key }}"
        name: user.email
        value: nakutnyi@gmail.com
      with_dict: "{{ git_repolist_personal }}"

    - name: Switch to fish shell
      become: yes
      user:
        name: "{{ user }}"
        shell: /usr/bin/fish


    # bash configuration goes below
    - name: Allow for long command line history within a bash session
      replace:
        path: "{{ homedir }}/.bashrc"
        regexp: '^HISTSIZE=.*$'
        replace: 'HISTSIZE=10000'

    - name: Allow for long command line history stored in a history file
      replace:
        path: "{{ homedir }}/.bashrc"
        regexp: '^HISTFILESIZE=.*$'
        replace: 'HISTFILESIZE=20000'

    - name: Setup selected editor in a config file
      lineinfile:
        create: yes
        dest: "{{ homedir }}/.selected_editor"
        regexp: "SELECTED_EDITOR="
        line: 'SELECTED_EDITOR="{{ editor_path }}"'

    - name: Setup selected editor in an environment variable
      lineinfile:
        regexp: "^export EDITOR="
        dest: "{{ homedir }}/.config/fish/config.fish"
        line: "setenv EDITOR {{ editor_path }}"

    - name: Add aliases and tweaks
      tags: bashrc
      lineinfile:
        dest: "{{ homedir }}/.bashrc"
        line: "{{ item }}"
      with_items:
        - 'HISTTIMEFORMAT="%d/%m/%y %T "'
        - 'HISTTIMEFORMAT="%d/%m/%y %T "'
        - 'alias g="git"'
        - 'alias conf="cd {{ homedir }}/dev/ansible/ubuntu_config/"'
        - 'alias work="cd {{ homedir }}/dev/"'
        - 'alias pc=pycharm-community'

    - name: Add autocompletion for aliases
      blockinfile:
        marker: "# {mark} ANSIBLE MANAGED BLOCK (autocompletion)"
        path: "{{ homedir }}/.bashrc"
        block: "{{lookup('file', 'templates/bash_aliases_autocompletion')}}"
        state: present
        insertafter: '^.alias.*$'

    - name: Allow colourful prompt in bash
      lineinfile:
        path: "{{ homedir }}/.bashrc"
        regexp: "#?force_color_prompt=yes"
        line: "force_color_prompt=yes"

    - name: Allow colourful prompt for git branch
      lineinfile:
        path: "{{ homedir }}/.bashrc"
        regexp: "#?unset color_prompt force_color_prompt"
        line: "#unset color_prompt force_color_prompt"

    - name: Prepare to add git branch output, remove trailing spaces from prompt
      tags: gitbranch
      replace:
        dest: "{{ homedir }}/.bashrc"
        regexp: "^( *)PS1='(.*) '$"
        replace: "\\1PS1='\\2'"

    - name: Add git branch output to your terminal prompt
      tags: gitbranch
      blockinfile:
